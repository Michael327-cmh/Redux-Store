{"ast":null,"code":"// import React, { useEffect } from 'react';\n// import { useQuery } from '@apollo/client';\n// import StoreProvider from '../../utils/GlobalState';\n// import { useSelector } from 'react-redux';\n// import {\n//   UPDATE_CATEGORIES,\n//   UPDATE_CURRENT_CATEGORY,\n// } from '../../utils/actions';\n// import { QUERY_CATEGORIES } from '../../utils/queries';\n// import { idbPromise } from '../../utils/helpers';\n// function CategoryMenu() {\n//   const dispatch = StoreProvider();\n//   const state = useSelector((state) => state);\n//   const { categories } = state;\n//   const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n//   useEffect(() => {\n//     if (categoryData) {\n//       dispatch({\n//         type: UPDATE_CATEGORIES,\n//         categories: categoryData.categories,\n//       });\n//       categoryData.categories.forEach((category) => {\n//         idbPromise('categories', 'put', category);\n//       });\n//     } else if (!loading) {\n//       idbPromise('categories', 'get').then((categories) => {\n//         dispatch({\n//           type: UPDATE_CATEGORIES,\n//           categories: categories,\n//         });\n//       });\n//     }\n//   }, [categoryData, loading, dispatch]);\n//   const handleClick = (id) => {\n//     dispatch({\n//       type: UPDATE_CURRENT_CATEGORY,\n//       currentCategory: id,\n//     });\n//   };\n//   return (\n//     <div>\n//       <h2>Choose a Category:</h2>\n//       {state.categories((item) => (\n//         <button\n//           key={item._id}\n//           onClick={() => {\n//             handleClick(item._id);\n//           }}\n//         >\n//           {item.name}\n//         </button>\n//       ))}\n//     </div>\n//   );\n// }\n// export default CategoryMenu;","map":{"version":3,"sources":["C:/Users/mrcar/Homework/Redux-Store/client/src/components/CategoryMenu/index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useEffect } from 'react';\r\n// import { useQuery } from '@apollo/client';\r\n// import StoreProvider from '../../utils/GlobalState';\r\n// import { useSelector } from 'react-redux';\r\n// import {\r\n//   UPDATE_CATEGORIES,\r\n//   UPDATE_CURRENT_CATEGORY,\r\n// } from '../../utils/actions';\r\n// import { QUERY_CATEGORIES } from '../../utils/queries';\r\n// import { idbPromise } from '../../utils/helpers';\r\n\r\n\r\n\r\n// function CategoryMenu() {\r\n//   const dispatch = StoreProvider();\r\n//   const state = useSelector((state) => state);\r\n\r\n//   const { categories } = state;\r\n\r\n//   const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\r\n\r\n//   useEffect(() => {\r\n//     if (categoryData) {\r\n//       dispatch({\r\n//         type: UPDATE_CATEGORIES,\r\n//         categories: categoryData.categories,\r\n//       });\r\n//       categoryData.categories.forEach((category) => {\r\n//         idbPromise('categories', 'put', category);\r\n//       });\r\n//     } else if (!loading) {\r\n//       idbPromise('categories', 'get').then((categories) => {\r\n//         dispatch({\r\n//           type: UPDATE_CATEGORIES,\r\n//           categories: categories,\r\n//         });\r\n//       });\r\n//     }\r\n//   }, [categoryData, loading, dispatch]);\r\n\r\n//   const handleClick = (id) => {\r\n//     dispatch({\r\n//       type: UPDATE_CURRENT_CATEGORY,\r\n//       currentCategory: id,\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Choose a Category:</h2>\r\n//       {state.categories((item) => (\r\n//         <button\r\n//           key={item._id}\r\n//           onClick={() => {\r\n//             handleClick(item._id);\r\n//           }}\r\n//         >\r\n//           {item.name}\r\n//         </button>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default CategoryMenu;\r\n"]},"metadata":{},"sourceType":"module"}