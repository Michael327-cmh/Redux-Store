{"ast":null,"code":"import _objectSpread from\"C:/Users/mrcar/Homework/Redux-Store/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import{Link}from\"react-router-dom\";import{useSelector}from'react-redux';import{pluralize}from\"../../utils/helpers\";import{useStoreContext}from\"../../utils/GlobalState\";import{ADD_TO_CART,UPDATE_CART_QUANTITY}from\"../../utils/actions\";import{idbPromise}from\"../../utils/helpers\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ProductItem(item){var dispatch=useStoreContext();var state=useSelector(function(state){return state;});var image=item.image,name=item.name,_id=item._id,price=item.price,quantity=item.quantity;var cart=state.cart;var addToCart=function addToCart(){var itemInCart=cart.find(function(cartItem){return cartItem._id===_id;});if(itemInCart){dispatch({type:UPDATE_CART_QUANTITY,_id:_id,purchaseQuantity:parseInt(itemInCart.purchaseQuantity)+1});idbPromise('cart','put',_objectSpread(_objectSpread({},itemInCart),{},{purchaseQuantity:parseInt(itemInCart.purchaseQuantity)+1}));}else{dispatch({type:ADD_TO_CART,product:_objectSpread(_objectSpread({},item),{},{purchaseQuantity:1})});idbPromise('cart','put',_objectSpread(_objectSpread({},item),{},{purchaseQuantity:1}));}};return/*#__PURE__*/_jsxs(\"div\",{className:\"card px-1 py-1\",children:[/*#__PURE__*/_jsxs(Link,{to:\"/products/\".concat(_id),children:[/*#__PURE__*/_jsx(\"img\",{alt:name,src:\"/images/\".concat(image)}),/*#__PURE__*/_jsx(\"p\",{children:name})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[quantity,\" \",pluralize(\"item\",quantity),\" in stock\"]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"$\",price]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:addToCart,children:\"Add to cart\"})]});}export default ProductItem;","map":{"version":3,"sources":["C:/Users/mrcar/Homework/Redux-Store/client/src/components/ProductItem/index.js"],"names":["React","Link","useSelector","pluralize","useStoreContext","ADD_TO_CART","UPDATE_CART_QUANTITY","idbPromise","ProductItem","item","dispatch","state","image","name","_id","price","quantity","cart","addToCart","itemInCart","find","cartItem","type","purchaseQuantity","parseInt","product"],"mappings":"gKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,SAAT,KAA0B,qBAA1B,CACA,OAASC,eAAT,KAAgC,yBAAhC,CACA,OAASC,WAAT,CAAsBC,oBAAtB,KAAkD,qBAAlD,CACA,OAASC,UAAT,KAA2B,qBAA3B,C,wFAEA,QAASC,CAAAA,WAAT,CAAqBC,IAArB,CAA2B,CACzB,GAAMC,CAAAA,QAAQ,CAAGN,eAAe,EAAhC,CACA,GAAMO,CAAAA,KAAK,CAAGT,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAX,EAAD,CAAzB,CAEA,GACEC,CAAAA,KADF,CAMIH,IANJ,CACEG,KADF,CAEEC,IAFF,CAMIJ,IANJ,CAEEI,IAFF,CAGEC,GAHF,CAMIL,IANJ,CAGEK,GAHF,CAIEC,KAJF,CAMIN,IANJ,CAIEM,KAJF,CAKEC,QALF,CAMIP,IANJ,CAKEO,QALF,CAQA,GAAQC,CAAAA,IAAR,CAAiBN,KAAjB,CAAQM,IAAR,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAMC,CAAAA,UAAU,CAAGF,IAAI,CAACG,IAAL,CAAU,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACP,GAAT,GAAiBA,GAA/B,EAAV,CAAnB,CACA,GAAIK,UAAJ,CAAgB,CACdT,QAAQ,CAAC,CACPY,IAAI,CAAEhB,oBADC,CAEPQ,GAAG,CAAEA,GAFE,CAGPS,gBAAgB,CAAEC,QAAQ,CAACL,UAAU,CAACI,gBAAZ,CAAR,CAAwC,CAHnD,CAAD,CAAR,CAKAhB,UAAU,CAAC,MAAD,CAAS,KAAT,gCACLY,UADK,MAERI,gBAAgB,CAAEC,QAAQ,CAACL,UAAU,CAACI,gBAAZ,CAAR,CAAwC,CAFlD,GAAV,CAID,CAVD,IAUO,CACLb,QAAQ,CAAC,CACPY,IAAI,CAAEjB,WADC,CAEPoB,OAAO,gCAAOhB,IAAP,MAAac,gBAAgB,CAAE,CAA/B,EAFA,CAAD,CAAR,CAIAhB,UAAU,CAAC,MAAD,CAAS,KAAT,gCAAqBE,IAArB,MAA2Bc,gBAAgB,CAAE,CAA7C,GAAV,CACD,CACF,CAnBD,CAqBA,mBACE,aAAK,SAAS,CAAC,gBAAf,wBACE,MAAC,IAAD,EAAM,EAAE,qBAAeT,GAAf,CAAR,wBACE,YACE,GAAG,CAAED,IADP,CAEE,GAAG,mBAAaD,KAAb,CAFL,EADF,cAKE,mBAAIC,IAAJ,EALF,GADF,cAQE,oCACE,uBAAMG,QAAN,KAAiBb,SAAS,CAAC,MAAD,CAASa,QAAT,CAA1B,eADF,cAEE,4BAAQD,KAAR,GAFF,GARF,cAYE,eAAQ,OAAO,CAAEG,SAAjB,yBAZF,GADF,CAgBD,CAED,cAAeV,CAAAA,WAAf","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux';\r\nimport { pluralize } from \"../../utils/helpers\";\r\nimport { useStoreContext } from \"../../utils/GlobalState\";\r\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\n\r\nfunction ProductItem(item) {\r\n  const dispatch = useStoreContext();\r\n  const state = useSelector((state) => state);\r\n\r\n  const {\r\n    image,\r\n    name,\r\n    _id,\r\n    price,\r\n    quantity\r\n  } = item;\r\n\r\n  const { cart } = state\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: _id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n      });\r\n      idbPromise('cart', 'put', {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...item, purchaseQuantity: 1 }\r\n      });\r\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card px-1 py-1\">\r\n      <Link to={`/products/${_id}`}>\r\n        <img\r\n          alt={name}\r\n          src={`/images/${image}`}\r\n        />\r\n        <p>{name}</p>\r\n      </Link>\r\n      <div>\r\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\r\n        <span>${price}</span>\r\n      </div>\r\n      <button onClick={addToCart}>Add to cart</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductItem;\r\n"]},"metadata":{},"sourceType":"module"}